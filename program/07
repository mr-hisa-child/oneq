final String path = (String) session.getAttribute("path");
Optional<Question> question = Optional.ofNullable(this.questionService.findByPath(path));

if (!question.isPresent()) {
	return Constant.PAGE_404;
}

List<Choice> choices = this.choiceService.findAll(question.get().getId());
final List<Summary> summaryList = new ArrayList<>();
choices.stream().forEach(c -> summaryList.add(new Summary(c.getContent(), c.getAnswers().size())));

model.addAttribute("summaryList", summaryList);

StringBuilder sb = new StringBuilder();
sb.append(request.getScheme()).append("://").append(request.getServerName());
if (request.getServerPort() != 80) {
	sb.append(":").append(request.getServerPort());
}
sb.append(request.getContextPath()).append(Constant.SEP_SLASH).append(Constant.ControllerPath.ANSWER_ROOT);

model.addAttribute("url", sb.toString());